<!-- Generated by HomePage Publisher - Version 2.1 Level(B) -->
<!-- Most recent revision: October 06, 2000. -->
<!-- Auto-Generated by the IPF Editor 2.x HTML Export routine Version 1.0.005˜ -->
<!-- Created on Thu Oct  5 14:06:36 2000 -->

<Html>
<Head>
   <Meta Name="Generator" Content="HomePage Publisher">
   <Meta Name="Hpp" Content="V=2.1 L=B Ecp=1004 Dcp=850 Lid=1-663">
   <Title>Definition of BSplines</Title>
</Head>

<Body BgColor="#c0c0c0" Text="#000000" Link="#0000c0" Vlink="#ae00ae" Alink="#ff007f">
<BaseFont Size=3>
<H2 Align=Left>
   <Strong>Definition of BSplines</Strong>
</H2>
<P Align=Left>This is not a technical explanation. Again, I refer you to <A Target="TextContent" Href="PAR00021.HTM">Dr. Dierckx book </A>.
<P Align=Left>In brief a spline is a mathematical technique which provides a &quot;smooth&quot; curve between points. It is the exact analog of the draftsman's french curve.<Img Border=0 Width=89 Height=52 Align=Bottom Src="FrenchCurve.jpeg">The spline consists of a series of polynomials of degree k,
one polynomial for each data point. A polynomial of degree 3 has the form p(x) = a + bx + cx**2 + dx**3. The polynomials are also required to have continuous derivatives up to k-1. Thus a spline of degree 3, a &quot;cubic&quot; spline, has continuous 1st and 2nd derivatives. In physical terms you may
think of this by saying the velocity (1st derivative) and the acceleration (2nd derivative) are smooth. To evaluate, i.e. get the value of the spline at a location, the appropriate polynomial for that location must be evaluated. The appropriate range is defined by boundaries, termed knots or break points.
There is a knot for each input data point. Of necessity the spline curve goes through the input data points, no matter how wild the result may be.
<P Align=Left>A Bspline has fewer knots than the number of data points. Therefore the curve does not have to go through the data points. How closely it fits the data depends on the nature of the data, the number and position of knots, and the degree of the polynomial used. This makes bsplines very useful
for curve fitting to data.
<P Align=Left>In the absence of the requirement to exactly fit the data points a Bspline algorithm must satisfy some other criteria. In ParamBSpline2 this is determined using the <A Target="TextContent" Href="PAR00006.HTM">Mode parameter </A>.
<P Align=Left>There are other types of splines. B(eta) splines relax the requirement of continuity and adding other requirements. Bezier curves and NURBs (Non Uniform Rational Bsplines) are other variants suited for user interaction with computer graphics software.

<Hr Width="100%" Align=Center>

<A Target="TextContent" Href="PAR00018.HTM"><Nobr>
<Pre><Code><Strong>Forward</Strong></Code></Pre></Nobr></A><Nobr> 
<Pre><Code>     <A Target="TextContent" Href="PAR00016.HTM"><Strong>Backward</Strong></A>     <A Target="TextContent" Href="PAR00001.HTM"><Strong>Return to Home Page</Strong></A></Code></Pre></Nobr>

<Hr Width="100%" Align=Center>

<P Align=Left>
</Body>
</Html>
