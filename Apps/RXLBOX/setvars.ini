; ********************************************************************
; * This is a real word ini/menu file used in our CID installations. *
; ********************************************************************
;
; Note that all sections in this file not used by RXLBOX are used by
; our menu program for the CID process called MINIMENU.CMD.
; MINIMENU calls RXLBOX to show the listbox menu in which the user can
; define the hardware of the PC to install. Using the results of
; RXLBOX MINIMENU creates a CMD file called SETVARS.CMD with the
; approbiate SET commands from the sections in this file.
; The environment variables set in the file SETVARS.CMDi are than used
; by the other CMDs envolved in our CID Installation process to install
; and configure the software for the workstation.
;
; This file contains the entries for SETVARS.CMD (including the
; menu descriptions for RXLBOX)
;
; Search for the string [*MainMenu*] to jump directly to the menu
; descriptions in this file.
;
; All menus in this file use messages from the file SAMPLE3.MSG. The
; routine used to retrieve the messages is GETMSG1.CMD. Therefore
; SAMPLE3.MSG and GETMSG1.CMD must be in the current directory for
; this sample to work!
; 
; initial release: 01.06.1996 /bs
; last update:     11.10.1996 /bs
;
; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
; This section is executed by MiniMenu before calling RxLBox
;
; all entries must be legal REXX statements
;
[InitMiniMenu]
call value 'M_LOCATION',        'ESCHBORN_5.OG',                'OS2ENVIRONMENT'
call value 'M_LANGUAGE',        'German',                       'OS2ENVIRONMENT'
call value 'M_FDISKFILE',       '2_GB_HD_(400/rest)',           'OS2ENVIRONMENT'
call value 'M_MACHINETYPE',     'Pentium w/ Soundblaster AWE32','OS2ENVIRONMENT'
call value 'M_DISPLAY',         'VGA',                          'OS2ENVIRONMENT'
call value 'M_CDROM',           'SCSI-CDROM',                   'OS2ENVIRONMENT'
call value 'M_SOUNDCARD',       'MULTIMEDIA_WITHOUT_SOUND',     'OS2ENVIRONMENT'
call value 'M_TRADAPTER',       '3COM',                         'OS2ENVIRONMENT'
call value 'M_CDROM',           'DETECT_CDROM',                 'OS2ENVIRONMENT'
call value 'M_TCPID',           substr(clientID,6)+0,           'OS2ENVIRONMENT'
call value 'M_MACHINE_TYPE',    'P166',                         'OS2ENVIRONMENT'
call value 'M_MODEL_NUM',       'ATI',                          'OS2ENVIRONMENT'
call value 'M_SERIAL_NUM',      'R000',                         'OS2ENVIRONMENT'
call value 'M_PLANT_MFG',       '55',                           'OS2ENVIRONMENT'

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
; This section is executed by MiniMenu before the program end
;
; all entries must be legal REXX statements
;
[ExitMiniMenu]
call value 'M_LOCATION',        '',                             'OS2ENVIRONMENT'
call value 'M_LANGUAGE',        '',                             'OS2ENVIRONMENT'
call value 'M_FDISKFILE',       '',                             'OS2ENVIRONMENT'
call value 'M_MACHINETYPE',     '',                             'OS2ENVIRONMENT'
call value 'M_DISPLAY',         '',                             'OS2ENVIRONMENT'
call value 'M_CDROM',           '',                             'OS2ENVIRONMENT'
call value 'M_SOUNDCARD',       '',                             'OS2ENVIRONMENT'
call value 'M_TRADAPTER',       '',                             'OS2ENVIRONMENT'
call value 'M_CDROM',           '',                             'OS2ENVIRONMENT'
call value 'M_TCPID',           '',                             'OS2ENVIRONMENT'
call value 'M_MACHINE_TYPE',    '',                             'OS2ENVIRONMENT'
call value 'M_MODEL_NUM',       '',                             'OS2ENVIRONMENT'
call value 'M_SERIAL_NUM',      '',                             'OS2ENVIRONMENT'
call value 'M_PLANT_MFG',       '',                             'OS2ENVIRONMENT'

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
; This section contains aliase for the result string
; Nested aliase are okay
;
[Aliasse]
A_LANGUAGE    = { value( 'M_LANGUAGE'    ,, 'OS2ENVIRONMENT' ) }
A_LOCATION    = { value( 'M_LOCATION'    ,, 'OS2ENVIRONMENT' ) }
A_FDISKFILE   = { value( 'M_FDISKFILE'   ,, 'OS2ENVIRONMENT' ) }
A_DISPLAY     = { value( 'M_DISPLAY'     ,, 'OS2ENVIRONMENT' ) }
A_CDROM       = { value( 'M_CDROM'       ,, 'OS2ENVIRONMENT' ) }
A_SOUNDCARD   = { value( 'M_SOUNDCARD'   ,, 'OS2ENVIRONMENT' ) }
A_TRADAPTER   = { value( 'M_TRADAPTER'   ,, 'OS2ENVIRONMENT' ) }
A_CS_SOURCE   = { 'CS_ON_' || value( 'INSTSOURCE',, 'OS2ENVIRONMENT' ) }

Desktop PC =                    PROLOG A_LANGUAGE A_LOCATION A_FDISKFILE A_DISPLAY A_CDROM A_SOUNDCARD A_TRADAPTER HARDWARE BOOTDRIVE_IS_C NO_PCMCIA A_CS_SOURCE EPILOG
Pentium w/ Soundblaster 16 =    PROLOG A_LANGUAGE A_LOCATION A_FDISKFILE HARDWARE BOOTDRIVE_IS_C ATI SCSI-CDROM SOUNDBLASTER_16 3COM NO_PCMCIA A_CS_SOURCE EPILOG
Pentium w/ Soundblaster AWE32 = PROLOG A_LANGUAGE A_LOCATION A_FDISKFILE HARDWARE BOOTDRIVE_IS_C ATI SCSI-CDROM SOUNDBLASTER_AWE32 3COM NO_PCMCIA A_CS_SOURCE EPILOG
Pentium w/o Sound =             PROLOG A_LANGUAGE A_LOCATION A_FDISKFILE HARDWARE BOOTDRIVE_IS_C ATI SCSI-CDROM MULTIMEDIA_WITHOUT_SOUND 3COM NO_PCMCIA A_CS_SOURCE EPILOG
IBM PS/2 =                      PROLOG A_LANGUAGE A_LOCATION A_FDISKFILE HARDWARE BOOTDRIVE_IS_C XGA SCSI-CDROM NO_MULTIMEDIA  IBMTOK NO_PCMCIA A_CS_SOURCE EPILOG
IBM Thinkpad 755C/CS =          PROLOG A_LANGUAGE A_LOCATION A_FDISKFILE HARDWARE BOOTDRIVE_IS_C Detect_Display SCSI-CDROM MULTIMEDIA_WITHOUT_SOUND TP755C_CS  IBMTOKCS A_CS_SOURCE EPILOG
IBM Thinkpad 755CE/CSE =        PROLOG A_LANGUAGE A_LOCATION A_FDISKFILE HARDWARE BOOTDRIVE_IS_C VGA NO_CDROM MULTIMEDIA_WITHOUT_SOUND TP755CE_CSE  IBMTOKCS A_CS_SOURCE EPILOG
IBM Thinkpad 760CD =            PROLOG A_LANGUAGE A_LOCATION A_FDISKFILE HARDWARE BOOTDRIVE_IS_C VGA MULTIMEDIA_WITHOUT_SOUND IDE-CDROM TP760CD  IBMTOKCS A_CS_SOURCE EPILOG
HP Omnibook 5500 CT =           PROLOG A_LANGUAGE A_LOCATION A_FDISKFILE HARDWARE BOOTDRIVE_IS_C VGA CRYSTAL IDE-CDROM HP5500CT  IBMTOKC1 A_CS_SOURCE EPILOG
Panasonic CF-42 =               PROLOG A_LANGUAGE A_LOCATION A_FDISKFILE HARDWARE BOOTDRIVE_IS_C VGA ESS681 IDE-CDROM PANASONIC  IBMTOKC2 A_CS_SOURCE EPILOG

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[CS_ON_NETWORK]
SET UniqueID=( value( 'UniqueID' ,, 'OS2ENVIRONMENT' ) )
SET InstID=( value( 'InstID',, 'OS2ENVIRONMENT' ) )
SET SRVIFSRQPath=%OS2DRIVE%\CID\SRVIFSRQ

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[CS_ON_HARDDISK]

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[CS_ON_CDROM]

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[PROLOG]
SET tcp_id=(value( 'M_TCPID',, 'OS2ENVIRONMENT' ))
SET pc_id=(clientID)
SET pc_id1=(substr(clientID,2))

REM *** MPTS Data
SET mptsaddress=('40001' || substr( clientID,2,7))

REM *** BKO Data
SET BKODestAddress=('40004802108' || 8 + (pos( right( clientID,1 ), '02468ACE' ) = 0 ) )

SET Silent=1
SET LocalDrive=A:

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[LUDWIGSBURG]
SET LOCATION=LUDWIGSBURG
SET OG=

REM *** TCP/IP Data
SET TCP_NET=10
SET SUBNETADDRESS1=10.123.6
SET SUBNETADDRESS2=10.122.24
SET SUBNETADDRESS3=10.122.25
SET ROUTERADDRESS1=10.123.6.250
SET ROUTERADDRESS2=10.123.6.250
SET ROUTERADDRESS3=10.123.6.250
SET BROADCASTADDRESS1=10.123.6.0
SET BROADCASTADDRESS2=10.122.24.0
SET BROADCASTADDRESS3=10.122.25.0
SET NETMASK=255.255.255.0
REM SET NETID=6
SET MTU=4400
SET ROUTERMETRIC1=1
SET ROUTERMETRIC2=1
SET ROUTERMETRIC3=1
SET TCPIPADDRESS=%SUBNETADDRESS1%.%TCP_ID%

REM *** Lan Server Data
SET DOMAIN=0010033

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[ESCHBORN_5.OG]
SET LOCATION=ESCHBORN
SET OG=5.OG

REM *** TCP/IP Data
SET TCP_NET=10
SET SUBNETADDRESS1=10.122.24
SET SUBNETADDRESS2=10.122.25
SET SUBNETADDRESS3=10.123.6
SET ROUTERADDRESS1=10.122.24.250
SET ROUTERADDRESS2=10.122.24.250
SET ROUTERADDRESS3=10.122.24.251
SET BROADCASTADDRESS1=10.122.24.0
SET BROADCASTADDRESS2=10.122.25.0
SET BROADCASTADDRESS3=10.123.6.0
SET NETMASK=255.255.255.0
REM SET NETID=5
SET MTU=4400
SET ROUTERMETRIC1=1
SET ROUTERMETRIC2=1
SET ROUTERMETRIC3=1
SET TCPIPADDRESS=%SUBNETADDRESS1%.%TCP_ID%

REM *** Lan Server Data
SET DOMAIN=0010044

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[ESCHBORN_4.OG]
SET LOCATION=ESCHBORN
SET OG=4.OG

REM *** TCP/IP Data
SET TCP_NET=10
SET SUBNETADDRESS1=10.122.25
SET SUBNETADDRESS2=10.122.24
SET SUBNETADDRESS3=10.123.6
SET ROUTERADDRESS1=10.122.25.250
SET ROUTERADDRESS2=10.122.25.250
SET ROUTERADDRESS3=10.122.25.250
SET BROADCASTADDRESS1=10.122.25.0
SET BROADCASTADDRESS2=10.122.24.0
SET BROADCASTADDRESS3=10.123.6.0
SET NETMASK=255.255.255.0
REM SET NETID=5
SET MTU=4400
SET ROUTERMETRIC1=1
SET ROUTERMETRIC2=1
SET ROUTERMETRIC3=1
SET TCPIPADDRESS=%SUBNETADDRESS1%.%TCP_ID%

REM *** Lan Server Data
SET DOMAIN=0010055

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[GERMAN]
SET Language=049
SET InstallLanguage=049
SET WPSLanguage=049
SET CountryCode=049
SET CountryKeyboard=GR

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[ENGLISH]
SET Language=001
SET InstallLanguage=001
SET WPSLanguage=001
SET CountryCode=001
SET CountryKeyboard=US

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[540_MB_HD_(1_partition)]
SET FDISKFILE=540MB.DAT
SET APPSDRIVE=C:

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[1_GB_HD_(300/rest)]
SET FDISKFILE=1GB.DAT
SET APPSDRIVE=D:

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[1_GB_HD_(300,300/rest)]
SET FDISKFILE=1GB_SPEC.DAT
SET APPSDRIVE=D:


; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[2_GB_HD_(400/600/rest)]
SET FDISKFILE=INTERNET.DAT
SET APPSDRIVE=D:

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[2_GB_HD_(400/600/rest)]
SET FDISKFILE=INTERNET.DAT
SET APPSDRIVE=D:

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[2_GB_HD_(400,400/800/rest)]
SET FDISKFILE=2GB_SPEC.DAT
SET APPSDRIVE=D:

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[2_GB_HD_(400/rest)]
SET FDISKFILE=2GB.DAT
SET APPSDRIVE=D:

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[BOOTDRIVE_IS_C]
SET BootDrive=C:
SET OS2DriveLetter=C
SET OS2Drive=C:
SET WinOS2Drive=C:
SET LogDrive=C:\CID
SET WorkDrive=C:\CID

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[VGA]
REM * Set DISPLAY to 4 for VGA 
SET Display=4

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[XGA]
SET Display=6

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[S3]
REM * Set DISPLAY to 4 (VGA) for S3
SET Display=4

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[ATI]
REM * Set DISPLAY to 4 (VGA) for ATI
SET Display=4

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[Detect_Display]
SET Display=0

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[SCSI-CDROM]
REM * 37 = Plextor and all other SCSI drives
SET CDROM=37

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[IDE-CDROM]
REM * 51 = other IDE CD-ROM drives
SET CDROM=51

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[DETECT_CDROM]
SET CDROM=1

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[NO_CDROM]
SET CDROM=0

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[MULTIMEDIA_WITHOUT_SOUND]
SET MultiMedia=1
SET SoundAdapter=NOSOUND
SET SoundSrcDir=
SET SoundCard=

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[NO_MULTIMEDIA]
SET MultiMedia=0
SET SoundAdapter=
SET SoundSrcDir=
SET SoundCard=

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
; Multimedia with AWE Soundblaster AWE32
[SOUNDBLASTER_AWE32]
SET Multimedia=1
SET SoundAdapter=AWE32
SET SoundSrcDir=
SET SoundCard=

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
; Multimedia with AWE Soundblaster 16
[SOUNDBLASTER_16]
SET Multimedia=1
SET SoundAdapter=SB16
SET SoundSrcDir=
SET SoundCard=

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[CRYSTAL]
SET Multimedia=1
SET SoundAdapter=NOSOUND
SET SoundSrcDir=CRYSTAL.121
SET SoundCard=CRYSTAL

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[ESS681]
SET Multimedia=1
SET SoundAdapter=NOSOUND
SET SoundSrcDir=ESS688.201
SET SoundCard=ESS681

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[NO_PCMCIA]
SET PCMCIA=0

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[HP5500CT]
SET NOTEBOOK=YES
SET PCMCIA=22
SET PCType=HP5500CT

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[TP755C_CS]
SET NOTEBOOK=YES
SET PCMCIA=18
SET PCType=TP755C

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[TP755CE_CSE]
SET NOTEBOOK=YES
SET PCMCIA=19
SET PCType=TP755CE

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[TP760CD]
SET NOTEBOOK=YES
SET PCType=TP760CD
SET PCMCIA=19

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[PANASONIC]
SET NOTEBOOK=YES
SET PCMCIA=25
SET PCType=PANASONIC

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
; IBM Tokenring adapter for PS/2
[IBMTOK]
SET TRADAPTER=IBMTOK
SET TR_RSPFILE=IBMTOK.RSP

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
; IBM Tokenring adapter for 3COM
[3COM]
SET TRADAPTER=IBMTOK
SET TR_RSPFILE=3COM.RSP

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
; IBM PCMCIA Tokenring adapter for the Thinkpads
[IBMTOKCS]
SET TRADAPTER=IBMTOKCS
SET TR_RSPFILE=IBMTOKCS.RSP

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
; IBM PCMCIA Tokenring adapter for the HP Omnibook
[IBMTOKC1]
SET TRADAPTER=IBMTOKCS
SET TR_RSPFILE=IBMTOKC1.RSP

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
; IBM PCMCIA Tokenring adapter for the Panasonic
[IBMTOKC2]
SET TRADAPTER=IBMTOKC2
SET TR_RSPFILE=IBMTOKC2.RSP

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
; environment variables created by GETCFG.CMD
;
[HARDWARE]
SET __OSVersion    = ( value( '__OSVersion'    ,, 'OS2ENVIRONMENT' ) )
SET __CSDLevel     = ( value( '__CSDLevel'     ,, 'OS2ENVIRONMENT' ) )
SET __BIOSType     = ( value( '__BIOSType'     ,, 'OS2ENVIRONMENT' ) )
SET __MachineType  = ( value( '__MachineType'  ,, 'OS2ENVIRONMENT' ) )
SET __CPU          = ( value( '__CPU'          ,, 'OS2ENVIRONMENT' ) )
SET __BusType      = ( value( '__BusType'      ,, 'OS2ENVIRONMENT' ) )
SET __PointerType  = ( value( '__PointerType'  ,, 'OS2ENVIRONMENT' ) )
SET __ComPorts     = ( value( '__COMPorts'     ,, 'OS2ENVIRONMENT' ) )
SET __LPTPorts     = ( value( '__LPTPorts'     ,, 'OS2ENVIRONMENT' ) )
SET __TokenRing    = ( value( '__TokenRing'    ,, 'OS2ENVIRONMENT' ) )
SET __HardDisks    = ( value( '__HardDisks'    ,, 'OS2ENVIRONMENT' ) )
SET __Memory       = ( value( '__Memory'       ,, 'OS2ENVIRONMENT' ) )
SET __VideoAdapter = ( value( '__VideoAdapter' ,, 'OS2ENVIRONMENT' ) )
SET __SCSI         = ( value( '__SCSI'         ,, 'OS2ENVIRONMENT' ) )
SET __BIOSData     = ( value( '__BIOSData'     ,, 'OS2ENVIRONMENT' ) )
SET __KeyBoard     = ( value( '__Keyboard'     ,, 'OS2ENVIRONMENT' ) )
SET __CDROMDrives  = ( value( '__CDROMDrives'  ,, 'OS2ENVIRONMENT' ) )

; ----------------------------
; ******************************************
; *** This section is NOT used by RXLBOX ***
; ******************************************
;
[EPILOG]
REM *** Default Network Adapter is IBM Tokenring-Adapter

IF "%TRADAPTER%" == "" SET TRADAPTER=IBMTOK
IF "%msgColor%" == ""  SET msgColor=[0;36;1;m

REM *** check the PCMCIA variable
IF "%TRADAPTER%" == "IBMTOK" GOTO Ende
IF "%TRADAPTER%" == "3COM" GOTO Ende
IF NOT "%PCMCIA%" == "0" GOTO Ende
ECHO. %errorColor% *** WARNING: You've choosen the TR Adapter "%TRADPATER%" but %normalColor%
ECHO. %errorColor%              you have NOT set the PCMCIA variable!%normalColor%
ECHO.
ECHO. %errorColor%    Now using the default for the PCMCIA variable (18 = IBM TP 755C) %normalColor%
ECHO.
IF NOT "%CAS_STATE%" == "" GOTO Ende
PAUSE
SET PCMCIA=18
:Ende

; --------------------------------------------------------------------
;
; Menu descriptions for RxLBox v1.20
;
; (see RXLBOX.MEM for a complete description of menu description files;
;  see RXLBOX.CMD for the usage description)
;

; --------------------------------------------------------------------
; This is the main menu for RxLBox
;
; Note:
;
; All messages (except one or two) are read from the message file in
; the OnMainInit code of this menu and save in the stem MenuDesc..
; Therefore they are useable in all other REXX statements for RxLBox
; in this file.
;
; This menu uses environment variables beginning with "M_" to pass
; data to the calling program.
;
[*MainMenu*]
Title1             = { MenuDesc.__Msg0006 }
Title2             = { MenuDesc.__Msg2001 }
Title3             = { MenuDesc.__Msg2006 }
StatusLine         = { MenuDesc.__Msg2007 }
InputPrompt        = { MenuDesc.__Msg2003 }
HelpPrompt         = { MenuDesc.__Msg2004 }
ErrorPrompt        = { MenuDesc.__Msg2005 }
CLS                = WHITE ON BLACK
AcceptAllInput     = NO
HelpForF1          = MAINHELP
HelpForCTRL_F1     = KEYHELP
HelpForALT_F1      = INPUTLINEHELP

MenuItem.#         = { MenuDesc.__Msg2008 value( 'M_MACHINETYPE', , 'OS2ENVIRONMENT' ) }
Action.#           = #GotoMenu() MachineTypeMenu

MenuItem.#         = { MenuDesc.__Msg2014 value( 'M_FDISKFILE', , 'OS2ENVIRONMENT' ) }
Action.#           = #GotoMenu() FdiskFileMenu

MenuItem.#         = ---------------------------------------------------------------------------
Action.#           = #NOP

MenuItem.#         = { MenuDesc.__Msg2009 value( 'M_LOCATION', , 'OS2ENVIRONMENT' ) }
Action.#           = #GotoMenu() LocationMenu

MenuItem.#         = { MenuDesc.__Msg2026 value( 'M_TCPID', , 'OS2ENVIRONMENT' ) }
Action.#           = #GotoMenu() TCPIP_id_Menu

MenuItem.#         = { MenuDesc.__Msg2010 value( 'M_LANGUAGE', , 'OS2ENVIRONMENT' ) }
Action.#           = #GotoMenu() LanguageMenu

MenuItem.#         = ---------------------------------------------------------------------------
Action.#           = #NOP

MenuItem.#         = { MenuDesc.__Msg2016 }
Action.#           = #GotoMenu() HardwareMenu

MenuItem.#         = ---------------------------------------------------------------------------
Action.#           = #NOP

MenuItem.#         = { MenuDesc.__Msg2031 }
Action.#           = #GotoMenu() SerialNoMenu

; Init some variables and read the messages
;
; Note that OnMainInit is executed _before_ the menu is shown. Therefore
; we can use REXX variables defined in the OnMainInit code in the
; menu descriptions.
;
OnMainInit         = \
  call ShowWorkingMessage GetMsg1( 2030 ) ; \
  MenuDesc.__Env = 'OS2ENVIRONMENT' ; \
  MenuDesc.__Msg0006 = GetMsg1(    6 ) ; \
  MenuDesc.__Msg2001 = GetMsg1( 2001 ) ; \
  MenuDesc.__Msg2003 = GetMsg1( 2003 ) ; \
  MenuDesc.__Msg2004 = GetMsg1( 2004 ) ; \
  MenuDesc.__Msg2005 = GetMsg1( 2005 ) ; \
  MenuDesc.__Msg2006 = GetMsg1( 2006 ) ; \
  MenuDesc.__Msg2007 = GetMsg1( 2007 ) ; \
  MenuDesc.__Msg2008 = GetMsg1( 2008 ) ; \
  MenuDesc.__Msg2009 = GetMsg1( 2009 ) ; \
  MenuDesc.__Msg2010 = GetMsg1( 2010 ) ; \
  MenuDesc.__Msg2011 = GetMsg1( 2011 ) ; \
  MenuDesc.__Msg2012 = GetMsg1( 2012 ) ; \
  MenuDesc.__Msg2013 = GetMsg1( 2013 ) ; \
  MenuDesc.__Msg2014 = GetMsg1( 2014 ) ; \
  MenuDesc.__Msg2015 = GetMsg1( 2015 ) ; \
  MenuDesc.__Msg2016 = GetMsg1( 2016 ) ; \
  MenuDesc.__Msg2017 = GetMsg1( 2017 ) ; \
  MenuDesc.__Msg2018 = GetMsg1( 2018 ) ; \
  MenuDesc.__Msg2019 = GetMsg1( 2019 ) ; \
  MenuDesc.__Msg2020 = GetMsg1( 2020 ) ; \
  MenuDesc.__Msg2021 = GetMsg1( 2021 ) ; \
  MenuDesc.__Msg2022 = GetMsg1( 2022 ) ; \
  MenuDesc.__Msg2023 = GetMsg1( 2023 ) ; \
  MenuDesc.__Msg2024 = GetMsg1( 2024 ) ; \
  MenuDesc.__Msg2025 = GetMsg1( 2025 ) ; \
  MenuDesc.__Msg2026 = GetMsg1( 2026 ) ; \
  MenuDesc.__Msg2027 = GetMsg1( 2027 ) ; \
  MenuDesc.__Msg2028 = GetMsg1( 2028 ) ; \
  MenuDesc.__Msg2031 = GetMsg1( 2031 ) ; \
  MenuDesc.__Msg2032 = GetMsg1( 2032 ) ; \
  MenuDesc.__Msg2033 = GetMsg1( 2033 ) ; \
  MenuDesc.__Msg2034 = GetMsg1( 2034 ) ; \
  MenuDesc.__Msg2035 = GetMsg1( 2035 ) ; \
  MenuDesc.__Msg2036 = GetMsg1( 2036 ) ; \
  MenuDesc.__Msg2037 = GetMsg1( 2037 ) ; \
  MenuDesc.__Msg2038 = GetMsg1( 2038 ) ; \
  MenuDesc.__Msg2039 = GetMsg1( 2039 ) ; \
  MenuDesc.__Msg2040 = GetMsg1( 2040 ) ; \
  MenuDesc.__Msg2041 = GetMsg1( 2041 ) ; \
  MenuDesc.__Msg2042 = GetMsg1( 2042 ) ; \
  MenuDesc.__Msg2043 = GetMsg1( 2043 ) ; \
  MenuDesc.__Msg2044 = GetMsg1( 2044 ) ; \
  nop ;

; --------------------------------------------------------------------
[*SerialNoMenu*]
Title1             = { MenuDesc.__Msg0006 }
Title2             = { MenuDesc.__Msg2001 }
Title3             = { MenuDesc.__Msg2032 }
StatusLine         = { MenuDesc.__Msg2038 }
InputPrompt        = { MenuDesc.__Msg2003 }
HelpPrompt         = { MenuDesc.__Msg2004 }
ErrorPrompt        = { MenuDesc.__Msg2005 }
CLS                = WHITE ON BLACK
AcceptAllInput     = NO
HelpForF1          = MAINHELP
HelpForCTRL_F1     = KEYHELP
HelpForALT_F1      = TCPIP_id_InputLineHelp

MenuItem.#         = { MenuDesc.__Msg2033 value( 'M_MACHINE_TYPE',, MenuDesc.__Env ) }
Action.#           = #UserInput() M_MACHINE_TYPE
StatusLine.#       = { MenuDesc.__Msg2039 }

MenuItem.#         = { MenuDesc.__Msg2034 value( 'M_MODEL_NUM',, MenuDesc.__Env ) }
Action.#           = #UserInput() M_MODEL_NUM
StatusLine.#       = { MenuDesc.__Msg2040 }

MenuItem.#         = { MenuDesc.__Msg2036 value( 'M_PLANT_MFG',, MenuDesc.__Env ) }
Action.#           = #UserInput() M_PLANT_MFG
StatusLine.#       = { MenuDesc.__Msg2041 }

MenuItem.#         = { MenuDesc.__Msg2035 value( 'M_SERIAL_NUM',, MenuDesc.__Env ) }
Action.#           = #UserInput() M_SERIAL_NUM
StatusLine.#       = { MenuDesc.__Msg2042 }

MenuItem.#         = ---------------------------------------------------------------------------
Action.#           = #NOP()

MenuItem.#         = { MenuDesc.__Msg2044 }
Action.#           = #GOBACK()
StatusLine.#       = { MenuDesc.__Msg2043 }

; --------------------------------------------------------------------
[*MachineTypeMenu*]
Title1             = { MenuDesc.__Msg2006 }
Title2             = { MenuDesc.__Msg2001 }
Title3             = { MenuDesc.__Msg2011 }
StatusLine         = { MenuDesc.__Msg2008 value( 'M_MACHINETYPE', , MenuDesc.__Env ) }
InputPrompt        = { MenuDesc.__Msg2003 }
HelpPrompt         = { MenuDesc.__Msg2004 }
ErrorPrompt        = { MenuDesc.__Msg2005 }
CLS                = WHITE ON BLACK
AcceptAllInput     = NO
HelpForF1          = MAINHELP
HelpForCTRL_F1     = KEYHELP
HelpForALT_F1      = INPUTLINEHELP

MenuItem.#         = Desktop PC
Action.#           = #REXXCMD( GOBACK ) call value 'M_MACHINETYPE', 'Desktop PC', MenuDesc.__Env

MenuItem.#         = ---------------------------------------------------------------------------
Action.#           = #NOP

MenuItem.#         = Pentium with Soundblaster AWE32
Action.#           = #REXXCMD( GOBACK ) call value 'M_MACHINETYPE', 'Pentium w/ Soundblaster AWE32', MenuDesc.__Env

MenuItem.#         = Pentium with Soundblaster 16
Action.#           = #REXXCMD( GOBACK ) call value 'M_MACHINETYPE', 'Pentium w/ Soundblaster 16', MenuDesc.__Env

MenuItem.#         = Pentium without Soundcard
Action.#           = #REXXCMD( GOBACK ) call value 'M_MACHINETYPE', 'Pentium w/o Sound', MenuDesc.__Env

MenuItem.#         = IBM PS/2
Action.#           = #REXXCMD( GOBACK ) call value 'M_MACHINETYPE', 'IBM PS/2', MenuDesc.__Env

MenuItem.#         = ---------------------------------------------------------------------------
Action.#           = #NOP

MenuItem.#         = IBM Thinkpad 755C/CS
Action.#           = #REXXCMD( GOBACK ) call value 'M_MACHINETYPE', 'IBM Thinkpad 755C/CS', MenuDesc.__Env

MenuItem.#         = IBM Thinkpad 755CE/CSE
Action.#           = #REXXCMD( GOBACK ) call value 'M_MACHINETYPE', 'IBM Thinkpad 755CE/CSE' , MenuDesc.__Env

MenuItem.#         = IBM Thinkpad 760CD
Action.#           = #REXXCMD( GOBACK ) call value 'M_MACHINETYPE', 'IBM Thinkpad 760CD' , MenuDesc.__Env

MenuItem.#         = HP Omnibook 5500 CT
Action.#           = #REXXCMD( GOBACK ) call value 'M_MACHINETYPE', 'HP Omnibook 5500 CT' , MenuDesc.__Env

MenuItem.#         = Panasonic CF-42
Action.#           = #REXXCMD( GOBACK ) call value 'M_MACHINETYPE', 'Panasonic CF-42' , MenuDesc.__Env

MenuItem.#         = ---------------------------------------------------------------------------
Action.#           = #NOP

; --------------------------------------------------------------------
[*HardwareMenu*]
Title1             = { MenuDesc.__Msg2006 }
Title2             = { MenuDesc.__Msg2001 }
Title3             = { MenuDesc.__Msg2016 }
StatusLine         = { MenuDesc.__Msg2008 value( 'M_MACHINETYPE', , MenuDesc.__Env ) }
InputPrompt        = { MenuDesc.__Msg2003 }
HelpPrompt         = { MenuDesc.__Msg2004 }
ErrorPrompt        = { MenuDesc.__Msg2005 }
CLS                = WHITE ON BLACK
AcceptAllInput     = NO
HelpForF1          = MAINHELP
HelpForCTRL_F1     = HardwareMenuKEYHELP
HelpForALT_F1      = INPUTLINEHELP

; suppress the internal menus in this menu
Fkey8              =
FKey11             =
FKey12             =

MenuItem.#         = { MenuDesc.__Msg2017 value( 'M_DISPLAY' ,, MenuDesc.__Env ) }
Action.#           = #GotoMenu() GraphicMenu

MenuItem.#         = { MenuDesc.__Msg2018 value( 'M_TRADAPTER' ,, MenuDesc.__Env ) }
Action.#           = #GotoMenu() TRAdapterMenu

MenuItem.#         = { MenuDesc.__Msg2019 value( 'M_CDROM' ,, MenuDesc.__Env ) }
Action.#           = #GotoMenu() CDROMMenu

MenuItem.#         = { MenuDesc.__Msg2020 value( 'M_SOUNDCARD' ,, MenuDesc.__Env ) }
Action.#           = #GotoMenu() SoundCardMenu

; save the initial values of the environment variables used in this
; menu only when the menu is called the first time
;
OnInit             = \
  if MenuDesc.__HWMenuInit = '' then ; \
  do ; \
    MenuDesc.__HWMenuInit = 1  ; \
    MenuDesc.__Display =    value( 'M_DISPLAY'   ,, MenuDesc.__Env ) ; \
    MenuDesc.__TRAdapter =  value( 'M_TRADAPTER' ,, MenuDesc.__Env ) ; \
    MenuDesc.__CDROM =      value( 'M_CDROM'     ,, MenuDesc.__Env ) ; \
    MenuDesc.__SOUNDCARD =  value( 'M_SOUNDCARD' ,, MenuDesc.__Env ) ; \
  end

; check if the users changed one of the values in this menu.
; If yes, we must change the PC Type to "Desktop PC" otherwise the
; changes are meaningless.
;
; Note the use of the variable !curCmd to check if OnExit is exeucted
; due to the call of another menu or because the user is leaving the menu
;
OnExit             = \
  if wordPos( !curCmd, ' #QUIT #QUIT() #GOBACK #GOBACK() ' ) <> 0 then ; \
  do ; \
    MenuDesc.__HWMenuInit = '' ; \
    DesktopPCType = 'Desktop PC' ; \
    pcTypOK = 1 ; \
    if MenuDesc.__Display <>   value( 'M_DISPLAY'   ,, MenuDesc.__Env ) then ; \
      pcTypOK = 0 ; \
    if MenuDesc.__TRAdapter <> value( 'M_TRADAPTER' ,, MenuDesc.__Env ) then ; \
      pcTypOK = 0 ; \
    if MenuDesc.__CDROM <>     value( 'M_CDROM'     ,, MenuDesc.__Env ) then ; \
      pcTypOK = 0 ; \
    if MenuDesc.__SOUNDCARD <> value( 'M_SOUNDCARD' ,, MenuDesc.__Env ) then ; \
      pcTypOK = 0 ; \
    curPCType = value( 'M_MACHINETYPE', , MenuDesc.__Env ) ; \
    if pcTypOK = 0 & curPCType <> DesktopPCType then ; \
    do ; \
      call value 'M_MACHINETYPE', DesktopPCType , MenuDesc.__Env ; \
      call ShowWorkingMessage GetMsg1( 2029, "PC Type", "Desktop PC" ) ,0 ; \
      say ; \
      say '07'x || center( MenuDesc.__Msg2005 , 80 ) ; \
      '@pause 2>NUL 1>NUL' ; \
    end ; \
  end ;

; --------------------------------------------------------------------
[*SoundCardMenu*]
Title1             = { MenuDesc.__Msg0006 }
Title2             = { MenuDesc.__Msg2001 }
Title3             = { MenuDesc.__Msg2024 }
StatusLine         = { MenuDesc.__Msg2020 value( 'M_SOUNDCARD', , MenuDesc.__Env ) }
InputPrompt        = { MenuDesc.__Msg2003 }
HelpPrompt         = { MenuDesc.__Msg2004 }
ErrorPrompt        = { MenuDesc.__Msg2005 }
CLS                = WHITE ON BLACK
AcceptAllInput     = NO
HelpForF1          = MAINHELP
HelpForCTRL_F1     = KEYHELP
HelpForALT_F1      = INPUTLINEHELP

MenuItem.#         = Soundblaster 16
Action.#           = #REXXCMD( GOBACK ) call value 'M_SOUNDCARD', 'SOUNDBLASTER_16', MenuDesc.__Env

MenuItem.#         = Soundblaster AWE32
Action.#           = #REXXCMD( GOBACK ) call value 'M_SOUNDCARD', 'SOUNDBLASTER_AWE32', MenuDesc.__Env

MenuItem.#         = Crystal Audio 1.2.1 (HP Omnibook)
Action.#           = #REXXCMD( GOBACK ) call value 'M_SOUNDCARD', 'CRYSTAL', MenuDesc.__Env

MenuItem.#         = Audiodrive ESS2688 v2.0.1 (Panasonic Notebook)
Action.#           = #REXXCMD( GOBACK ) call value 'M_SOUNDCARD', 'ESS681', MenuDesc.__Env

MenuItem.#         = ---------------------------------------------------------------------------
Action.#           = #NOP

MenuItem.#         = Multimedia w/o Sound card
Action.#           = #REXXCMD( GOBACK ) call value 'M_SOUNDCARD', 'MULTIMEDIA_WITHOUT_SOUND', MenuDesc.__Env

MenuItem.#         = No Multimedia at all
Action.#           = #REXXCMD( GOBACK ) call value 'M_SOUNDCARD', 'NO_MULTIMEDIA', MenuDesc.__Env

; --------------------------------------------------------------------
[*CDROMMenu*]
Title1             = { MenuDesc.__Msg0006 }
Title2             = { MenuDesc.__Msg2001 }
Title3             = { MenuDesc.__Msg2023 }
StatusLine         = { MenuDesc.__Msg2019 value( 'M_CDROM', , MenuDesc.__Env ) }
InputPrompt        = { MenuDesc.__Msg2003 }
HelpPrompt         = { MenuDesc.__Msg2004 }
ErrorPrompt        = { MenuDesc.__Msg2005 }
CLS                = WHITE ON BLACK
AcceptAllInput     = NO
HelpForF1          = MAINHELP
HelpForCTRL_F1     = KEYHELP
HelpForALT_F1      = INPUTLINEHELP

MenuItem.#         = SCSI CDROM
Action.#           = #REXXCMD( GOBACK ) call value 'M_CDROM', 'SCSI-CDROM', MenuDesc.__Env

MenuItem.#         = IDE CDROM
Action.#           = #REXXCMD( GOBACK ) call value 'M_CDROM', 'IDE-CDROM', MenuDesc.__Env

MenuItem.#         = Autodetect CDROM
Action.#           = #REXXCMD( GOBACK ) call value 'M_CDROM', 'DETECT_CDROM', MenuDesc.__Env

MenuItem.#         = No CDROM
Action.#           = #REXXCMD( GOBACK ) call value 'M_CDROM', 'NO_CDROM', MenuDesc.__Env

; --------------------------------------------------------------------
[*TRAdapterMenu*]
Title1             = { MenuDesc.__Msg0006 }
Title2             = { MenuDesc.__Msg2001 }
Title3             = { MenuDesc.__Msg2022 }
StatusLine         = { MenuDesc.__Msg2018 value( 'M_TRADAPTER', , MenuDesc.__Env ) }
InputPrompt        = { MenuDesc.__Msg2003 }
HelpPrompt         = { MenuDesc.__Msg2004 }
ErrorPrompt        = { MenuDesc.__Msg2005 }
CLS                = WHITE ON BLACK
AcceptAllInput     = NO
HelpForF1          = MAINHELP
HelpForCTRL_F1     = KEYHELP
HelpForALT_F1      = INPUTLINEHELP

MenuItem.#         = 3COM in IBM Tokenring adapter mode
Action.#           = #REXXCMD( GOBACK ) call value 'M_TRADAPTER', '3COM', MenuDesc.__Env

MenuItem.#         = IBM Tokenring adapter 16/4 for PS/2
Action.#           = #REXXCMD( GOBACK ) call value 'M_TRADAPTER', 'IBMTOK', MenuDesc.__Env

MenuItem.#         = IBM PCMCIA Tokenring adapter (Thinkpad configuration)
Action.#           = #REXXCMD( GOBACK ) call value 'M_TRADAPTER', 'IBMTOKCS', MenuDesc.__Env

MenuItem.#         = IBM PCMCIA Tokenring adapter (HP Omnibook configuration)
Action.#           = #REXXCMD( GOBACK ) call value 'M_TRADAPTER', 'IBMTOKC1', MenuDesc.__Env

MenuItem.#         = IBM PCMCIA Tokenring adapter (Panasonic configuration)
Action.#           = #REXXCMD( GOBACK ) call value 'M_TRADAPTER', 'IBMTOKC2', MenuDesc.__Env

; --------------------------------------------------------------------
[*GraphicMenu*]
Title1             = { MenuDesc.__Msg0006 }
Title2             = { MenuDesc.__Msg2001 }
Title3             = { MenuDesc.__Msg2021 }
StatusLine         = { MenuDesc.__Msg2017 value( 'M_DISPLAY', , MenuDesc.__Env ) }
InputPrompt        = { MenuDesc.__Msg2003 }
HelpPrompt         = { MenuDesc.__Msg2004 }
ErrorPrompt        = { MenuDesc.__Msg2005 }
CLS                = WHITE ON BLACK
AcceptAllInput     = NO
HelpForF1          = MAINHELP
HelpForCTRL_F1     = KEYHELP
HelpForALT_F1      = INPUTLINEHELP

MenuItem.#         = VGA
Action.#           = #REXXCMD( GOBACK ) call value 'M_DISPLAY', 'VGA', MenuDesc.__Env

MenuItem.#         = XGA
Action.#           = #REXXCMD( GOBACK ) call value 'M_DISPLAY', 'XGA', MenuDesc.__Env

MenuItem.#         = S3
Action.#           = #REXXCMD( GOBACK ) call value 'M_DISPLAY', 'S3', MenuDesc.__Env

MenuItem.#         = ATI
Action.#           = #REXXCMD( GOBACK ) call value 'M_DISPLAY', 'ATI', MenuDesc.__Env

MenuItem.#         = Autodetect display adapter
Action.#           = #REXXCMD( GOBACK ) call value 'M_DISPLAY', 'Detect_Display', MenuDesc.__Env

; --------------------------------------------------------------------
[*FdiskFileMenu*]
Title1             = { MenuDesc.__Msg0006 }
Title2             = { MenuDesc.__Msg2001 }
Title3             = { MenuDesc.__Msg2015 }
StatusLine         = { MenuDesc.__Msg2014 value( 'M_FDISKFILE', , MenuDesc.__Env ) }
InputPrompt        = { MenuDesc.__Msg2003 }
HelpPrompt         = { MenuDesc.__Msg2004 }
ErrorPrompt        = { MenuDesc.__Msg2005 }
CLS                = WHITE ON BLACK
AcceptAllInput     = NO
HelpForF1          = MAINHELP
HelpForCTRL_F1     = KEYHELP
HelpForALT_F1      = INPUTLINEHELP

MenuItem.#         = 2 GB Harddisk (C: 400 MB, D: Rest)
Action.#           = #REXXCMD( GOBACK ) call value 'M_FDISKFILE', '2_GB_HD_(400/rest)', MenuDesc.__Env

MenuItem.#         = 2 GB Harddisk, (C: 400 MB, D: 600, rest: free ) Internet-Partitioning
Action.#           = #REXXCMD( GOBACK ) call value 'M_FDISKFILE', '2_GB_HD_(400/600/rest)', MenuDesc.__Env

MenuItem.#         = 2 GB Harddisk, (C: 400,400 MB, D: 800, E: rest)
Action.#           = #REXXCMD( GOBACK ) call value 'M_FDISKFILE', '2_GB_HD_(400,400/800/rest)', MenuDesc.__Env

MenuItem.#         = 1 GB Harddisk (C: 300 MB, D: rest)
Action.#           = #REXXCMD( GOBACK ) call value 'M_FDISKFILE', '1_GB_HD_(200/rest)', MenuDesc.__Env

MenuItem.#         = 1 GB Harddisk, (C: 300,300 MB, D: rest)
Action.#           = #REXXCMD( GOBACK ) call value 'M_FDISKFILE', '1_GB_HD_(300,300/rest)', MenuDesc.__Env

MenuItem.#         = <1 GB Harddisk (C: ALL)
Action.#           = #REXXCMD( GOBACK ) call value 'M_FDISKFILE', '540_MB_HD_(1_partition)', MenuDesc.__Env

; --------------------------------------------------------------------
[*LocationMenu*]
Title1             = { MenuDesc.__Msg0006 }
Title2             = { MenuDesc.__Msg2001 }
Title3             = { MenuDesc.__Msg2012 }
StatusLine         = { MenuDesc.__Msg2009 } value( 'M_LOCATION', , MenuDesc.__Env ) }
InputPrompt        = { MenuDesc.__Msg2003 }
HelpPrompt         = { MenuDesc.__Msg2004 }
ErrorPrompt        = { MenuDesc.__Msg2005 }
CLS                = WHITE ON BLACK
AcceptAllInput     = NO
HelpForF1          = MAINHELP
HelpForCTRL_F1     = KEYHELP
HelpForALT_F1      = INPUTLINEHELP

MenuItem.#         = Eschborn 5. OG
Action.#           = #REXXCMD( GOBACK ) call value 'M_LOCATION', 'ESCHBORN_5.OG', MenuDesc.__Env

MenuItem.#         = Eschborn 4. OG
Action.#           = #REXXCMD( GOBACK ) call value 'M_LOCATION', 'ESCHBORN_4.OG', MenuDesc.__Env

MenuItem.#         = Ludwigsburg
Action.#           = #REXXCMD( GOBACK ) call value 'M_LOCATION', 'LUDWIGSBURG', MenuDesc.__Env

; --------------------------------------------------------------------
[*LanguageMenu*]
Title1             = { MenuDesc.__Msg0006 }
Title2             = { MenuDesc.__Msg2001 }
Title3             = { MenuDesc.__Msg2013 }
StatusLine         = { MenuDesc.__Msg2010 value( 'M_LANGUAGE', , MenuDesc.__Env ) }
InputPrompt        = { MenuDesc.__Msg2003 }
HelpPrompt         = { MenuDesc.__Msg2004 }
ErrorPrompt        = { MenuDesc.__Msg2005 }
CLS                = WHITE ON BLACK
AcceptAllInput     = NO
HelpForF1          = MAINHELP
HelpForCTRL_F1     = KEYHELP
HelpForALT_F1      = INPUTLINEHELP

MenuItem.#         = German
Action.#           = #REXXCMD( GOBACK ) call value 'M_LANGUAGE', 'GERMAN', MenuDesc.__Env

MenuItem.#         = US English
Action.#           = #REXXCMD( GOBACK ) call value 'M_LANGUAGE', 'ENGLISH', MenuDesc.__Env

; --------------------------------------------------------------------
[*TCPIP_id_Menu*]
Title1             = { MenuDesc.__Msg0005 }
Title2             = { MenuDesc.__Msg2001 }
Title3             = { MenuDesc.__Msg2025 }
StatusLine         = { MenuDesc.__Msg2026 value( 'M_TCPID', , MenuDesc.__Env ) }
InputPrompt        = { MenuDesc.__Msg2003 }
HelpPrompt         = { MenuDesc.__Msg2004 }
ErrorPrompt        = { MenuDesc.__Msg2005 }
CLS                = WHITE ON BLACK
AcceptAllInput     = NO
HelpForF1          = MAINHELP
HelpForCTRL_F1     = KEYHELP
HelpForALT_F1      = TCPIP_id_INPUTLINEHELP
InputVar           = M_TCPID

OnInit             = MenuDesc.__saveIPId = value( 'M_TCPID',, MenuDesc.__Env )

; check that the IP id is valid (0 <= ipID <= 254) before leaving
; the menu
;
OnExit             = \
  newtcpIPID = value( 'M_TCPID',, MenuDesc.__Env ) ; \
  inputOk = 1  ; \
  if datatype( newtcpIPID ) <> 'NUM' then  ; \
    inputOK = 0  ; \
  else ; \
    if newtcpIPID < 0 | newtcpIPID > 254 then ; \
      inputOK = 0 ; \
  if inputOK = 0 then  ; \
  do ; \
    'cls' ; \
    say ; \
    call ShowWorkingMessage MenuDesc.__Msg2028,0 ; \
    say ; \
    say '07'x || center( MenuDesc.__Msg2005, 80 ) ; \
    '@pause 2>NUL 1>NUL' ; \
    !curRC = 1 ; \
    call value 'M_TCPID', MenuDesc.__SaveIPID, MenuDesc.__Env ; \
  end /* if */ ; \
  nop ;

; there must be at least one menu entry in every menu!
;
MenuItem.#         = { MenuDesc.__Msg2027 }
Action.#           = #GoBack()

; ----------------------------
; Onlinehelp for F1 for all menus
;
[<MainHelp>]

No help available at this time!

---------------------------------

Use <CTRL-F1> to call the online help with the function key description.
Use <ALT-F1> to call the online help with the input line description.
[dummy section]

; ----------------------------
; Onlinehelp for CTRL-F1 for all menus (except the menu "HardwareMenu")
;
[<KeyHelp>]
F1 - show the online help
ALT-F1 - show the input line description
CTRL-F1 - show the function key description

F8 - show macro list              F9 - refresh display
F11 - show list of all menus      F12 - show menu history list

F10 - Quit                        ESC - go one menu back

RETURN - choose the highlighted entry

Use the cursor keys, PgDn, PgUp, Home, End, CTRL-Home and CTRL-End
to scroll through the menu.
[dummy section]

; ----------------------------
; Onlinehelp for CTRL-F1 for the menu "HardwareMenu"
; (In this menu the keys F8, F11 and F12 are not used)
;
[<HardwareMenuKeyHelp>]
F1 - show the online help
ALT-F1 - show the input line description
CTRL-F1 - show the function key description

F9 - refresh display

F10 - Quit                        ESC - go one menu back

RETURN - choose the highlighted entry

Use the cursor keys, PgDn, PgUp, Home, End, CTRL-Home and CTRL-End
to scroll through the menu.
[dummy section]

; ----------------------------
; Onlinehelp for ALT-F1 all menus (except the menu TCPIP_id_menu)
;
[<InputLineHelp>]
+n - scroll down n entries        -n scroll up n entries
 n - choose the entry n if its on the current page
     or
     jump to the entry if it's not on the current page

 *command - exeucte the OS/2 command 'command' (Preceed the command
            with another asterix '*' to wait after execution)

 macroName - execute the macro 'macroName'

---------------------------------
Use <F1> to call the general online help
Use <CTRL-F1> to call the online help with the key description.
[dummy section]

; ----------------------------
; Onlinehelp for ALT-F1 the menu TCPIP_id_menu
; (in this menu the navigation with numbers is disabled)
;
[<TCPIP_id_InputLineHelp>]

 *command - exeucte the OS/2 command 'command' (Preceed the command
            with another asterix '*' to wait after execution)

 macroName - execute the macro 'macroName'

---------------------------------
Use <F1> to call the general online help
Use <CTRL-F1> to call the online help with the key description.
[dummy section]

; -------------------------------

; --------------------------------------------------------------------

